@import('SpriteKit/SKScene');
@import('Foundation/CGSize');
@import('Foundation/CGSizeMake');

// object inspection
function log(obj){
	if (obj) {
		console.log('    ' + Object.keys(obj.__proto__).join('\n    '));
	}
	console.log('    ' + Object.keys(obj).join('\n    '));
}

function update() {
}

@class('MyScene', SKScene, [], [
	{
		name: 'update',
		returnType: 'void',
		arguments: [ { type: 'id', name: 'sender' }, { type: 'id', name: 'foo', property:'bar'} ],
		action: update
	}
]);

console.log('********** SKScene **********');
console.log('- Class');
log(SKScene);
console.log('- Instance');
log(new SKScene());

console.log('');
console.log('********** MyScene **********');
console.log('- Class');
log(MyScene);
console.log('- Instance');
log(new MyScene());

@class('MyScene2', SKScene, [], [
    {
        name: 'initWithSize',
        returnType: 'id',
        arguments: [ { type: 'CGSize', name: 'size' } ],
        action: function(params) {
        	console.log('initWithSize called with size=',params.size.width+'x'+params.size.height);
        	console.log('super is',this.super.initWithSize);
        	return this.super.initWithSize(params.size);
        }
    }
]);
var scene = new MyScene2();
var scene2 = MyScene2.alloc().initWithSize(CGSizeMake(10,10));
console.log(scene2);
